 {/* <main>

                <div className='imageAndTitleModal' >

                    <img src={modalData.imageSrc} alt='imagem do produto' />
                    <h1>{modalData.title}</h1>

                </div>

                <div className='lineBoxProductModal'>

                    <h3>R$ {(modalData.price * amount).toFixed(2)}</h3>

                    <div className="quantityOfProduct" >

                        <img src={removeIcon} onClick={()=>{remove()}} alt="Item de remover" />

                        <p>Quantidade</p>

                        <img src={addIcon} onClick={()=>{add()}} alt="Item de adicionar" />

                    </div>

                </div>

                    <div className='amountItensModal' >
                        Quantidade selecionada: {amount}
                    </div>

                    <a onClick={()=>{addToCart()}} >ADICIONAR AO CARRINHO</a>

                <p className='itemDescModal' >{modalData.desc}</p>

            </main> */}

        // </div>







        <ReactCircleModal
                                                backgroundColor="#97349a"
                                                toogleComponent={onClick => (
                                                    <button onClick={onClick}>
                                                    Adicionar
                                                    </button>
                                                )}
                                                // Optional fields and their default values
                                                offsetX={0}
                                                offsetY={0}
                                                >
                                                {(onClick) => (
                                                    <div style={{ backgroundColor: '#fff', padding: '1em' }}>
                                                    <Modal displayProperty={displayModal} modalData={modalData} />
                                                    <button onClick={onClick}>
                                                        Click here to close modal
                                                    </button>
                                                    </div>
                                                )}
                                                </ReactCircleModal>










// firebase.database().ref('items').get('/items')
        //     .then(function (snapshot) {

        //         if (snapshot.exists()) {

        //             var data = snapshot.val()
        //             var temp = Object.keys(data).map((key) => data[key])

        //             var totalamount = []
        //             temp.map(item => totalamount.push(0))
        //             // setAmount(totalamount)

        //             setData(temp)
        //             setDataBackup(temp)

        //         }
        //         else {
        //             console.log("No data available");
        //         }
        //     })







            function handleModalInfos(item) {

        setModalData(item)
        setHeightPageWhenOpenModal(document.body.getBoundingClientRect().top)
        window.scrollTo(0, 0);
        displayModal == "none" ? setDisplayModal("flex") : setDisplayModal("none")

    }





              <div style={{ display: displayModal }} role="dialog" className='divModal' >

                <span onClick={closeModal}>X</span>
                {/* <Modal displayProperty={displayModal} modalData={modalData} /> */}
                {/* <Modall displayProperty={displayModal} modalData={modalData} /> */}

            </div>






                function closeModal() {

        if (displayModal == "none")
            setDisplayModal("flex")
        else {
            window.scrollTo(-heightPageWhenOpenModal, - heightPageWhenOpenModal)
            setDisplayModal("none");
        }

        const products = JSON.parse(localStorage.getItem('products'))
        const total = JSON.parse(localStorage.getItem('totalValue'))

        if (products != null) {
            if (!(products.id))
                setDisplayButtonFinishOrder('block')
            setTotalValue(total)
        }

    }